buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.7'
    }
}

import com.bmuschko.gradle.docker.DockerRemoteApiPlugin
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-remote-api'

mainClassName = 'nl.idgis.geodropin.oracle.metadata.Inserter'

repositories {
	mavenCentral ()
}

dependencies {
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.8.RELEASE'
	compile files('libs/ojdbc7.jar')
}

task unpackTar(type: Copy) {
	dependsOn distTar
	
	from tarTree(distTar.archivePath)
	into "build/docker"
}

task copyOracleFiles(type: Copy) {
	from 'src/main/oracle'
	into "build/docker"
}

task createDockerfile(type: Dockerfile) {
    dependsOn copyOracleFiles
    
    destFile = file("${project.buildDir}/docker/Dockerfile")
	from 'azul/zulu-openjdk'
	
    // Setup of ogr2ogr and instantclient
	runCommand "apt-get update"
    runCommand "apt-get install -y unzip curl build-essential libaio1"
    
    copyFile "instantclient-basic-linux.x64-12.1.0.2.0.zip", '/root'
    copyFile "instantclient-sdk-linux.x64-12.1.0.2.0.zip", '/root'
    copyFile "instantclient-sqlplus-linux.x64-12.1.0.2.0.zip", '/root'
    runCommand "cd /opt && \
        unzip ~/instantclient-basic-linux.x64-12.1.0.2.0.zip && \
        unzip ~/instantclient-sdk-linux.x64-12.1.0.2.0.zip && \
        unzip ~/instantclient-sqlplus-linux.x64-12.1.0.2.0.zip && \
        export LD_LIBRARY_PATH=/opt/instantclient_12_1 && \
		cd ~/ && \
        curl -O -J http://download.osgeo.org/gdal/2.1.2/gdal-2.1.2.tar.gz && \
        gunzip -c gdal-2.1.2.tar.gz | tar -xv && \
        cd /opt/instantclient_12_1 && \
        ln -s libclntsh.so.12.1 libclntsh.so && \
        cd ~/gdal-2.1.2 && \
        ./configure --with-oci-include=/opt/instantclient_12_1/sdk/include --with-oci-lib=/opt/instantclient_12_1 && \
        make && \
        make install && \
        ldconfig && \
        rm -fr ~/gdal-2.1.2* && \
        rm -fr ~/instantclient*"
    
    copyFile "tnsnames.ora", '/opt/instantclient_12_1'
    runCommand "chmod a=rwx /opt/instantclient_12_1/tnsnames.ora"
 
    // For Oracle metadata
	copyFile "oracle-metadata/.", '/opt'
	runCommand 'chmod +x /opt/bin/oracle-metadata'
}

task buildImage(type: DockerBuildImage) {
	dependsOn createDockerfile, unpackTar
	
	inputDir = file("build/docker")
	tag = "idgis/ogr2ogr-oracle-metadata"
}